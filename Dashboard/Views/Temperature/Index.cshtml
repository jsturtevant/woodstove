@model Dashboard.Models.DevicesViewModel

@{
    ViewBag.Title = "Temprature";
}

<div class="devices row">
    @foreach (var device in @Model.Devices)
    {
        <div class="col col-md-6 text-center">
            <div class="device" data-device-id="@device.Id">
                <h1 class="">@device.Name</h1>
                <div class="loading">
                    Loading<br />
                    <i class="fa fa-cog fa-spin"></i>
                </div>
             

                <div class="temprature-display hide">
                    <span class="temp">

                    </span>
                    <br />

                    <canvas class="graph" width="400" height="100"></canvas>
                </div>
            </div>
        </div>
    }
</div>

@section scripts
{
    <script src="~/Scripts/jquery.signalR-2.2.0.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <script src="~/Scripts/smoothie.js"></script>

    <script>
        $(function () {

            // Declare a proxy to reference the hub.
            var tempHub = $.connection.tempHub;
            var devices = new Array();

            $.connection.hub.start().done(function () {
                $('.device').each(function () {

                    var $device = $(this);
                    var deviceId = $device.data('device-id');

                    tempHub.server.subscribeToDevice(deviceId);

                    var smoothie = new SmoothieChart();
                    smoothie.streamTo($device.find('.graph')[0]);

                    var line1 = new TimeSeries();
                    smoothie.addTimeSeries(line1);

                    devices[deviceId] = {
                        'device': $device,
                        'line': line1
                    };
                });
            });

            tempHub.client.currentTemp = function (temp) {

                var deviceToUpdate = devices[temp.DeviceId];

                deviceToUpdate.device.find(".loading").addClass('hide');
                deviceToUpdate.device.find(".temprature-display").removeClass('hide');

                deviceToUpdate.device.find(".temp").html(temp.Value);
                deviceToUpdate.line.append(new Date().getTime(), temp.Value);
            };
            
          
        });

        
    </script>
}